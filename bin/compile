#!/usr/bin/env bash

# ## Usage
#
#     $ bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

LIBRDKAFKA_VERSION=0.9.1
LIBRDKAFKA_DIST=librdkafka-${LIBRDKAFKA_VERSION}
LIBRDKAFKA_DIST_GZ=${LIBRDKAFKA_DIST}.tar.gz
LIBRDKAFKA_SHASUM256=5ad57e0c9a4ec8121e19f13f05bacc41556489dfe8f46ff509af567fdee98d82

BUILD_DIR=$1
CACHE_DIR=$2

# rely on heroku-buildpack-python to find our libs
# # https://github.com/heroku/heroku-buildpack-python/blob/0b8741916676f70eb6537aa8da402fbdbe5292c7/bin/compile#L117
VENDOR_DIR=${BUILD_DIR}/.heroku/vendor
VENDOR_RUN_DIR=${VENDOR_DIR/$BUILD_DIR//app}
PROFILE_PATH=${BUILD_DIR}/.profile.d/librdkafka.sh

if [ -z "${CACHE_DIR}" ]; then
    echo invalid usage - missing cache dir
    exit 1
fi

mkdir -p $CACHE_DIR
cd $CACHE_DIR

# we need libsasl2-dev
needed=( libsasl2-dev )
missing=$(comm -1 -3 <(dpkg-query -W -f '${package}\n' | sort) <(IFS=$'\n'; echo "${needed[*]}" | sort))
if [[ "$missing" ]]; then
    apt-get update -qq || { echo "Failed to 'apt-get update'. You must build this formula using Docker."; exit 1; }
    apt-get install -q -y $missing
fi

# remove old, pre-installed librdkafka during this build, it'll be there again once slug is deployed
if [ -z "${KEEP_LIBRDKAFKA_DPKG}" ]; then
   set +e
   apt-get remove -y librdkafka-dev librdkafka1
   set -e
fi

# download if needed, dir won't exist in cache if checksum wasn't previously verified
if [ ! -e $LIBRDKAFKA_DIST ];then
    # download
    curl -Lo ${LIBRDKAFKA_DIST_GZ} https://github.com/edenhill/librdkafka/archive/${LIBRDKAFKA_VERSION}.tar.gz

    # verify
    echo "${LIBRDKAFKA_SHASUM256}  ${LIBRDKAFKA_DIST_GZ}" | shasum -c -

    # extract
    tar zxf $LIBRDKAFKA_DIST_GZ

    # clean up
    rm $LIBRDKAFKA_DIST_GZ
fi

cd $LIBRDKAFKA_DIST
if [ ! -e Makefile.config ]; then
   ./configure --prefix=${VENDOR_DIR}
fi
make
make install

mkdir -p $(dirname $PROFILE_PATH)
cat > $PROFILE_PATH <<EOF
export C_INCLUDE_PATH=$VENDOR_RUN_DIR/include:\$C_INCLUDE_PATH
export LIBRARY_PATH=$VENDOR_RUN_DIR/lib:\$LIBRARY_PATH
export LD_LIBRARY_PATH=$VENDOR_RUN_DIR/lib:\$LD_LIBRARY_PATH
EOF
chmod 755 $PROFILE_PATH
